project_name: cgapp
env_files:
  github_token: /home/koddr/.goreleaser/github_token

before:
  hooks:
    - go mod download

builds:
  - # Build macOS, Linux and Windows versions
    main: ./cmd/cgapp/main.go
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    targets:
      - linux_amd64
      - darwin_amd64
      - darwin_arm64
      - windows_amd64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
    hooks:
      post:
        - upx --brute "{{ .Path }}"

# .goreleaser.yml
brews:
  - # GitHub/GitLab repository to push the formula to
    tap:
      owner: create-go-app
      name: homebrew-cli

    # Template for the url which is determined by the given Token (GitHub or gitlab)
    # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    url_template: "https://github.com/create-go-app/cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: create-go-app
      email: truewebartisans@gmail.com

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Caveats for the user of your binary.
    # Default is empty.
    caveats: "Create a new project via interactive console UI into current folder by using `cgapp create` command. A helpful documentation and next steps with your project is here https://create-go.app/"

    # Your app's homepage.
    # Default is empty.
    homepage: "https://create-go.app/"

    # Your app's description.
    # Default is empty.
    description: "A powerful CLI for the Create Go App project. Create a new production-ready project with backend, frontend and deploy automation by running one CLI command!"

    # SPDX identifier of your app's license.
    # Default is empty.
    license: "Apache-2.0"

    # Packages your package depends on.
    dependencies:
      - name: npm
      - name: git
      - name: go

dockers:
 - # GOOS of the built binary that should be used.
   goos: linux
   goarch: amd64

   # Name templates of the built binaries that should be used.
   ids: ["test-cli"]

   # Templates of the Docker image names.
   image_templates:
     - "posriniv/test-cli:{{ .Tag }}"

   # Path to the Dockerfile (from the project root).
   dockerfile: Dockerfile

archives:
  - # Replacements for GOOS and GOARCH in the archive name.
    replacements:
      darwin: macOS
      linux: Linux
      windows: Windows
      amd64: x86_64

    # Can be used to change the archive formats for specific GOOS.
    format_overrides:
      - goos: windows
        format: zip

    # Additional files/template/globs you want to add to the archive.
    files:
      - LICENSE
      - README.md

checksum:
  name_template: "checksums.txt"

snapshot:
  name_template: "{{ .Tag }}"

changelog:
  sort: asc
  filters:
    exclude:
      - "^*.md:"
